function config = spikesort_config()
%SPIKESORT_CONFIG Generates the global config for spikesort
%   config = SPIKESORT_CONFIG()

config = struct();
%get the base file path of the github directory
config.base_file_path = get_base_filepath();

%THESE PARAMETERS WILL CHECK IF YOU have a gpu available and if you have the parallel computing toolbox available
config.IS_PARALLEL_AVAILABLE =license('test', 'Distrib_Computing_Toolbox') && exist('parpool', 'file') ;
config.IS_GPU_AVAILABLE = canUseGPU;
config.USE_GPU = false;
config.USE_PARALLEL = false;

config.DEBUG_DAVID = false; % used by various functions, and will print plots, used for debugging

config.DIR_WITH_LIMITED_CLUSTER_PLOTS = "D:\cluster_neuronspikes\Data\limited_cluster_plots_pngs";
% THE FOLLOWING LINES OF THE CONFIG FILE RELATE TO CODES GENERATED BY LUIS DAVID DAVILA
config.TEMPLATE_CLUSTER_FP =[fullfile(config.base_file_path,"Shape_Template_PNGs","Horizontal Elipse.png")
    fullfile(config.base_file_path,"Shape_Template_PNGs","Left To Right Negative Elipse.png")
    fullfile(config.base_file_path,"Shape_Template_PNGs","Left To Right Positive Elipse.png")
    fullfile(config.base_file_path,"Shape_Template_PNGs","Vertical Elipse.png")
    fullfile(config.base_file_path,"Shape_Template_PNGs","circle.png")] ;

config.TEMPLATE_CLUSTER_FP_ON_HPC =[fullfile("/scratch/lddavila/cluster_neuronspikes","Shape Template PNGs","Horizontal Elipse.png")
    fullfile("/scratch/lddavila/cluster_neuronspikes","Shape Template PNGs","Left To Right Negative Elipse.png")
    fullfile("/scratch/lddavila/cluster_neuronspikes","Shape Template PNGs","Left To Right Positive Elipse.png")
    fullfile("/scratch/lddavila/cluster_neuronspikes","Shape Template PNGs","Vertical Elipse.png")
    fullfile("/scratch/lddavila/cluster_neuronspikes","Shape Template PNGs","circle.png")];
% Prints extra output
config.DEBUG = false;





config.MAX_EUC_DIST = 50; %serves as an upper bound of euclidean distance between cluster template wave forms to check when merging clusters
config.UPDATE_CLASSIFICATION = false; %when true every grade will be updated with the latest classification using classify_clusters_based_on_grades_ver_3
config.OVERLAP = 80; %the minimum percentage that clusters must overlap to be counted as the same cluster
config.ONLY_OVERLAP_WITH_NEURONS =true; %when this is used return_best_config_of_cluster will only allow overlaps if the overlapping cluster is also a neuron
config.ONLY_NEURONS = false; %when set to true updated_table_of_other_appearences will only include neurons, when set to false it will also include clusters listed as MUA
config.UPDATE_GRADES = false;
config.NUM_OF_UNITS = 100; %this tells you how many units are in the recording, it must be set if SIMULATED = true;
config.SIMULATED = true; %when set to true, it indicates that your data is simulated and thus you MUST indicate the number of units
config.ART_TETR_ARRAY = build_artificial_tetrode; %this is an array which tells you how to configure your channels, this should be changed when using a new probe with different channel numbers or if you want to customize the channel groupings
config.max_channel_number = max(config.ART_TETR_ARRAY,[],"all");
%each row should correspond a grouping of channels you want to create



config.TIME_DELTA = 0.004;
config.IS_IDEAL_DIMS_PASS = true;

config.MIN_IMPROV_THRESH = 0.1;
config.SCALE_FACTOR = -1;


config.NUM_DPTS_TO_SLICE = 60;

config.NUM_OF_STD_ABOVE_MEAN = 20;

config.NUM_DIMS_TO_USE_FOR_RECLUSTERING = 3;
config.DIR_TO_SAVE_RECLUSTERING_TO ="D:\spike_gen_data\Recordings By Channel Precomputed\0_100Neuron300SecondRecordingWithLevel3Noise Refinement Pass " + string(config.NUM_DIMS_TO_USE_FOR_RECLUSTERING) +" Channels";
config.SAVE_DIRECTORY = 'D:\cluster_neuronspikes\Data'; %where any important data will be saved to
config.BLIND_PASS_DIR_PRECOMPUTED = fullfile(config.base_file_path,"Default_Results_Dir"); %the parent directory where the blind pass precomputed info is saved (things like spikes per channel and std per channel)
config.TIMESTAMP_FP = "D:\spike_gen_data\Recordings By Channel Timestamps\0_100Neuron300SecondRecordingWithLevel3Noise\timestamps.mat";
config.DIR_WITH_OG_CHANNEL_RECORDINGS = "D:\spike_gen_data\Recordings By Channel\0_100Neuron300SecondRecordingWithLevel3Noise";
config.DIR_WITH_CHANNEL_WISE_MEANS_AND_STDS = "D:\spike_gen_data\Recordings By Channel Precomputed\0_100Neuron300SecondRecordingWithLevel3Noise\mean_and_std\mean_and_std.mat";
config.GENERIC_GRADES_DIR = "D:\spike_gen_data\Recordings By Channel Precomputed\0_100Neuron300SecondRecordingWithLevel3Noise\initial_pass min z_score"; % a generic file path which can be modified to access grades of various cluster configurations
config.GENRIC_DIR_WITH_OUTPUTS = "D:\spike_gen_data\Recordings By Channel Precomputed\0_100Neuron300SecondRecordingWithLevel3Noise\initial_pass_results min z_score"; %a generic file path which can be modified to access the results of clustering
config.DIR_TO_SAVE_RECLUSTERING_TO ="D:\spike_gen_data\Recordings By Channel Precomputed\0_100Neuron300SecondRecordingWithLevel3Noise Refinement Pass " + string(config.NUM_DIMS_TO_USE_FOR_RECLUSTERING) +" Channels";
config.GT_FP = "D:\spike_gen_data\Recording By Channel Ground Truth\0_100Neuron300SecondRecordingWithLevel3Noise.h5.mat";

config.ON_HPC = contains(pwd,"lddavila","IgnoreCase",true);
config.NUM_DIMS_TO_USE_FOR_RECLUSTERING_ON_HPC = [2 3 4 5 6 7];
config.DIR_TO_SAVE_RECLUSTERING_TO_ON_HPC =fullfile("/home","lddavila","Reclusted Passs 0_100_3","Refinement Pass " + string(config.NUM_DIMS_TO_USE_FOR_RECLUSTERING_ON_HPC) +" Channels");
config.BLIND_PASS_DIR_PRECOMPUTED_ON_HPC = fullfile("/home","lddavila","spike_gen_data","0_100Neuron300SecondRecordingWithLevel3Noise"); %the parent directory where the blind pass precomputed info is saved (things like spikes per channel and std per channel)
config.TIMESTAMP_FP_ON_HPC = fullfile("/scratch/lddavila/data_from_local_machine/Recordings By Channel Timestamps","0_100Neuron300SecondRecordingWithLevel3Noise","timestamps.mat");
config.DIR_WITH_OG_CHANNEL_RECORDINGS_ON_HPC = fullfile("/home","lddavila","spike_gen_data","0_100Neuron300SecondRecordingWithLevel3Noise_og_recordings");
config.DIR_WITH_CHANNEL_WISE_MEANS_AND_STDS_ON_HPC = fullfile("/home","lddavila","spike_gen_data","0_100Neuron300SecondRecordingWithLevel3Noise","mean_and_std","mean_and_std.mat");
config.GENERIC_GRADES_DIR_ON_HPC = fullfile("/scratch/lddavila/data_from_local_machine","0_100Neuron300SecondRecordingWithLevel3Noise","initial_pass min z_score"); % a generic file path which can be modified to access grades of various cluster configurations
config.GENRIC_DIR_WITH_OUTPUTS_ON_HPC = fullfile("/home","lddavila","spike_gen_data","0_100Neuron300SecondRecordingWithLevel3Noise","initial_pass_results min z_score"); %a generic file path which can be modified to access the results of clustering
config.FP_TO_GT_FOR_RECORDING_ON_HPC = fullfile("/scratch/lddavila/data_from_local_machine/Recording By Channel Ground Truth","0_100Neuron300SecondRecordingWithLevel3Noise.h5.mat");
config.FP_TO_TABLE_OF_BEST_CHANNELS = fullfile("/home","lddavila","data_from_local_server",'table_with_best_channels based on amplitude.mat');
config.MIN_UNIT_APPEARENCE_THRESHOLD = 30;

config.NAMES_OF_CURR_GRADES =["lratio","cv","short isi","incompleteness compare wire","mahal/isolation distance compare wire",...
    "# of spikes","stationary","Temp Matching With Rep Wire","Min Bhat Dist","Bhat Distance To Unsorted","Lratio from noise",...
    "cv with 0.5","cv with 0.33", "cv with 0.24",...
    "# of isi < 7.5ms / # isi < 100ms","snr 0.5 compare wire","snr 0.33 compare wire","snr 0.24 compare wire",...
    "bhat dist to near threshold spikes","bhat dist to near cluster peaks",...
    "# of intersection between cluster and nearest cluster","cluster duration /length of entire config",...
    "cluster mpc","# of singular cols", "avg spike duration","# of timestamps / duration of conifg", ...
    "has valley","compare wire skewness","cluster template matching","symmetry of the cluster's histogram",...
    "Cluster Amp Cat","Cluster Compare Wire Amp Category","likelihood of multi unit acticity","bhat dist to possibly mua clusters","Tightness of waveform based on euc dist",...
    "Compare Wire tightness of waveform based on euc dist","do not use","do not use","Under/overpowered","Mean SNR",...
    "likeliness of burst","compare wire","2nd compare wire","avg compare wire cluster z score","SNR by dimensions","SNR based on 2 Compare Wires", "Mean Spike Amplitude Per Channel","Mean Z Score Per Channel Cluster Only","Channels",...
    "Mean Z Score Per Channel all spikes in config","compare wire Mean z score Cluster Only","Compare Mean Z Score All Spikes In Config","Compare Wire Mean Amp","Elipse Temp Match","Circle Temp Match","do not use","do not use",...
    "Prediction of accuracy based on image","prediction of cluster quality based on image","MUA or Not","Expand Or Dont","accuracy category prediction using mean waveform","Unused"];

%config.GRADE_IDXS_THAT_ARE_USED_TO_PICK_BEST = [2 23 54 12 36 18 13 17 16 14 5 40 55 46 25];
config.GRADE_IDXS_THAT_ARE_USED_TO_PICK_BEST =   [2 40 54 55 46 23 12 36 18 13 25 17 16 14 5 58 60 61]; %removed accuracy category grade (62)
% config.GRADE_IDXS_THAT_ARE_USED_TO_PICK_BEST = [40 54 55 46 23 12 36 18 13 25 17 16 14 5 ];
config.IDXS_OF_GRADES_THAT_ARE_BETTER_SMALLER = [2 23 54 12 36 18 13 17 16 14 5 8 11 19 46 51 52];

config.DIR_TO_SAVE_CLUSTER_IMAGE_PNGS_TO ="D:\cluster_neuronspikes\Data\limited_cluster_plots_pngs";
config.DIR_TO_SAVE_CLUSTER_IMAGE_PNGS_TO_ON_HPC ="/scratch/lddavila/data_from_local_machine/100_by_100_cluster_pngs";

config.FP_TO_TABLE_OF_ALL_BP_CLUSTERS= "D:\cluster_neuronspikes\Data\final_overlap_table\final_table_with_overlap_only_neurons.mat";
config.FP_TO_TABLE_OF_ALL_BP_CLUSTERS_ON_HPC = "/scratch/lddavila/data_from_local_machine/final_overlap_table/final_table_with_overlap_only_neurons.mat";

%
config.WHICH_NEURAL_NET = "complex predict merge result";
config.DIR_TO_SAVE_ACC_RESULTS_TO ="D:\cluster_neuronspikes\Data\All_Neural_Networks_Ever_Trained\06_04_choose_better_mean_waveform_results_equalize_proportion";
config.DIR_TO_SAVE_ACC_RESULTS_TO_ON_HPC = "/scratch/lddavila/data_to_copy_to_local_machine/06_09_2025_twin_nn_tests";

config.DIR_WITH_NUMBER_BASED_IMAGES = fullfile("D:\cluster_neuronspikes\Data\MUA Or Not");
config.DIR_WITH_NUMBER_BASED_IMAGES_ON_HPC = "/home/lddavila/data_from_local_server/Expand Or Dont";


config.FP_TO_ACC_PREDICTING_NN = fullfile("D:","cluster_neuronspikes","Accuracy Based Neural Network","accuracy score 81.3078 number of acc cats 3 num layers 18 filter size 32.mat");
config.FP_TO_ACC_PREDICTING_NN_ON_HPC = fullfile("/home","lddavila","cluster_neuronspikes","Accuracy Based Neural Network","accuracy score 81.3078 number of acc cats 3 num layers 18 filter size 32.mat");

config.FP_TO_QUALITY_PREDICTING_NN = fullfile("D:","cluster_neuronspikes","David Trained NN","accuracy score 65.3465 number of acc cats 5 num layers 18 filter size 64.mat");
config.FP_TO_QUALITY_PREDICTING_NN_ON_HPC = fullfile("/home","lddavila","cluster_neuronspikes","David Trained NN","accuracy score 65.3465 number of acc cats 5 num layers 18 filter size 64.mat");

config.FP_TO_MUA_OR_NOT_PREDICTING_NN ="D:\cluster_neuronspikes\mua_or_not_NN\accuracy score 95.0739 num layers 27 filter size 64 mua_or_not.mat" ;
config.FP_TO_MUA_OR_NOT_PREDICTING_NN_ON_HPC ="/home/lddavila/cluster_neuronspikes/mua_or_not_NN/accuracy score 95.0739 num layers 27 filter size 64 mua_or_not.mat";

config.FP_TO_EXPAND_OR_DONT_NN ="D:\cluster_neuronspikes\expand_or_dont_NN\accuracy score 94.5545 num layers 22 filter size 256 mua_or_not.mat" ;
config.FP_TO_EXPAND_OR_DONT_NN_ON_HPC = "/home/lddavila/cluster_neuronspikes/expand_or_dont_NN/accuracy score 94.5545 num layers 22 filter size 256 mua_or_not.mat";


config.WHAT_KIND_OF_CLUSTER_PLOT_TO_MAKE = "all"; %used by create_cluster_plots_as_png_on_hpc 
                                               %'all' - will print every spike per tetrode configuration and the cluster in black
                                               %'limited' - will print the cluster and every spike within 6 standard deviations of the cluster mean 
config.NUM_STDS_AROUND_CLUSTER = 10; % used by create_cluster_plots_as_png_on_hpc;
                                     % cuts a window around cluster which is this many standard deviations around the cluster mean (x and y)


config.USE_SNR_DIMS = true;

config.twin_nn_training_data = "D:\cluster_neuronspikes\Data\Cluster Plots Sorted Into Number Categories Train";
config.twin_nn_training_data_on_hpc = "/home/lddavila/data_from_local_server/train_twin_nn_data";

config.twin_nn_test_data = "D:\cluster_neuronspikes\Data\Cluster Plots Sorted Into Number Categories Test";
config.twin_nn_test_data_on_hpc = "/home/lddavila/data_from_local_server/test_twin_nn_data";

config.parent_save_dir = "D:\cluster_neuronspikes\Data";
config.parent_save_dir_ON_HPC = '/scratch/lddavila/data_to_copy_to_local_machine';


config.USE_WHAT_FOR_CHOOSE_BETTER = "images"; %used by train_pick_better_between_2_nn.m
                                        %only valid inputs are the following 4 strings : "images","grades", "all" "template wave form"
                                        
config.FP_TO_TWIN_NN_PREDICTOR = "D:\cluster_neuronspikes\twin_nn_accuracy_cat\accuracy score 54.50 number of layers 10 number of neurons 1 learning rate 0.006000 number of accuracy cats 5 twin_nn accuracy classes.mat";
config.FP_TO_TWIN_NN_PREDICTOR_ON_HPC = "/home/lddavila/cluster_neuronspikes/twin_cluster_quality_nn/accuracy score 60.10 number of layers 2 number of neurons 1 learning rate 0.000060 number of accuracy cats 5 twin_nn using more accuracy cats.mat";

config.DIR_TO_ACC_CAT_IMAGES = "D:\cluster_neuronspikes\accuracy_category_clusters";
config.DIR_TO_ACC_CAT_IMAGES_ON_HPC = "";

config.IDENTIFY_NEURONS_USING_NN = true;

config.DEFAULT_CLUSTERING_Z_SCORES = [3 4 5 6 7 8 9];

config.FP_TO_ALREADY_DONE = "D:\cluster_neuronspikes\Data\Already Done Neural Networks\already_done_twin_nn_choose_better.mat";
config.FP_TO_ALREADY_DONE_ON_HPC= "/scratch/lddavila/data_from_local_machine/Already Done Neural Networks/already_done_twin_nn_choose_better.mat";


config.FP_TO_MERGABLE_OR_NOT_NN = "D:\cluster_neuronspikes\merge_or_dont_nn_based_on_waveforms\accuracy score 0.88584 num layers 8 num neurons per layer50 merge_or_dont_nn.mat";
config.FP_TO_MERGABLE_OR_NOT_NN_ON_HPC = "/scratch/lddavila/cluster_neuronspikes/merge_or_dont_nn_based_on_waveforms/accuracy score 0.88584 num layers 8 num neurons per layer50 merge_or_dont_nn.mat";

config.DIR_TO_SAVE_UPDATED_CLUSTER_TABLE_TO = fullfile(config.parent_save_dir,"updated_cluster_table");
config.DIR_TO_SAVE_UPDATED_CLUSTER_TABLE_TO_ON_HPC = fullfile(config.parent_save_dir_ON_HPC,"updated_cluster_table");

config.FP_TO_CHOOSE_BETTER_NN = "D:\cluster_neuronspikes\choose_better_nn\accuracy score 0.71695 num layers 1 num neurons per layer40 mean waveform choose better_equalize_proportions.mat";
config.FP_TO_CHOOSE_BETTER_NN_ON_HPC = "/scratch/lddavila/cluster_neuronspikes/choose_better_nn/accuracy score 0.71695 num layers 1 num neurons per layer40 mean waveform choose better_equalize_proportions.mat";

config.FP_TO_PREDICT_ACC_CAT_USING_MEAN_WAVEFORM_NN = "D:\cluster_neuronspikes\accuracy_category_based_on_mean_waveform_nn\accuracy score 0.69231num accuracy cats 3 num layers 2 num neurons per layer30 accuracy_category_based_on_mean_waveform.mat";
config.FP_TO_PREDICT_ACC_CAT_USING_MEAN_WAVEFORM_NN_ON_HPC = "/scratch/lddavila/cluster_neuronspikes/accuracy_category_based_on_mean_waveform_nn/accuracy score 0.69231num accuracy cats 3 num layers 2 num neurons per layer30 accuracy_category_based_on_mean_waveform.mat";

config.DIR_TO_SAVE_RESULTS_TO = "06_19_2025_predict_accuracy_increases";

config.FP_TO_PREDICTING_ACCURACY_ON_GRADES_NN  = "D:\cluster_neuronspikes\Predict_accuracy_cat_using_grades_nn\accuracy score 0.86357number of acc cats 3 num layers 6 num neurons per layer40 grades neural network.mat";
config.FP_TO_PREDICTING_ACCURACY_ON_GRADES_NN_ON_HPC = "/scratch/lddavila/cluster_neuronspikes/Predict_accuracy_cat_using_grades_nn/accuracy score 0.86357number of acc cats 3 num layers 6 num neurons per layer40 grades neural network.mat";

config.FP_TO_COMPLEX_MERGE_OR_DONT_NN = "D:\cluster_neuronspikes\Data\06_17_2025_complex_merge_nn_with_overlap\accuracy score 0.99235 num layers 1 num neurons per layer10 complex merge checker.mat";
config.FP_TO_COMPLEX_MERGE_OR_DONT_NN_ON_HPC = "";

config.DIR_TO_STATUS_FILE = "";
config.FP_TO_STATUS_FILE = "";
% ORIGINAL BEGINS HERE

% Prints extra output
config.DEBUG = true;

% If not empty, puts results in a separate directory instead of the session
% dir.
config.SAVE_DIRECTORY = 'C:\Users\ldd77\OneDrive\Desktop\cluster_neuronspikes\Data\Results';

% Usually keep it false - instead of only spikesorting a single session,
% spikesorts all subfolders too.
config.RECURSIVE_SPIKESORT = false;

% Re-spikesorts even if output already exists - deletes existing output.
config.FORCE_SPIKESORT = true;

% Statistics related config options:
% Only clusters if there exists an existing matlab "gold standard" file.
config.ONLY_MANUAL_CLUSTERED = false;
% Where to look for the existing manually clustered files.
% KYLE FORMAT:
% config.MANUAL_DIR = '../../backup';
% LEDIA FORMAT:
% config.MANUAL_DIR = '..';
% KATY FORMAT:
% config.MANUAL_DIR = '.';
% ALEXANDER FORMAT:
config.MANUAL_DIR = 'clustered';

% Maximum firing rate (in Hz)
config.MAX_FIRING_RATE = 250;
% Maximum number of spikes
config.MAX_NUM_SPIKES = 400000;
% Minimum number of (good) spikes in order to consider spike sorting.
config.MIN_NUMBER_OF_SPIKES = 100;

% Whether to detect and process nearly simultaneous spikes
config.NEAR_SIMULTANEOUS_SPIKE_DETECTION = true;

% In addition to saving timestamps in the output, this will save the
% waveforms too (warning: huge .mat files)
config.SAVE_WAVEFORMS = false;

% Saves the output as an NTT file for viewing in Plexon. Note: if
% SAVE_WAVEFORMS is false, this will only temporarily save waveforms.
config.SAVE_NTT = true;
% Aligns the waveforms if outputting waveforms
config.ALIGN_OUTPUT = true;

% This dynamic field just keeps track of whether to initially save
% waveforms, either permanently or just for generating the NTT file.
config.save_waveforms = config.SAVE_WAVEFORMS || config.SAVE_NTT;

% For interpolation - if you're unsure, do not change
config.NUM_SMOOTH_POINTS = 120;

% *** Spikesort namespace ***
config.spikesort = struct();
config.spikesort.DEBUG = config.DEBUG;

% Whether to do iterations of clustering
config.spikesort.NUM_ITERATIONS = 5;
config.spikesort.DO_BAD_CLUSTER_ROUND = true;

% Which preprocessing filters to use
% Stationarity/Timestamp filter - change depending on your data (keep by
% default)
config.spikesort.USE_TIMESTAMP_FILTER = true;
% SNR filter - change depending on your data (keep by default)
config.spikesort.USE_SNR_FILTER = true;
% Density/Border removal filter - change depending on your data (keep by
% default)
config.spikesort.USE_DENSITY_FILTER = true;

% Cluster/Subcluster parameters:
% Maximum number of clusters to try in FCM
config.spikesort.CLUSTER_NS = 6;
% Maximum number of clusters to try in FCM for each dimension in weight
% calculations.
config.spikesort.WEIGHT_NS = 4;
% Maximum number of clusters to try in FCM in subcluster steps
config.spikesort.SUBCLUSTER_NS = 4;
% Maximum subcluster recursion depth (Inf by default)
config.spikesort.MAX_SUBCLUSTER_DEPTH = 5;

% Flag for whether to trust that neurons far from threshold in the peak
% dimensions will be sorted correctly. The reason for this is because such
% neurons are close to the electrode, so the gaussianity assumption no
% longer necessarily holds.
config.spikesort.TRUST_FAR_NEURONS = false;

% Flag for whether to make cluster Gaussian in PC1 (remove outliers) at the
% very end of the processing
config.spikesort.USE_PC1_CLEANING = false;

config.spikesort.USE_DIMENSION_SELECTION = true;
config.spikesort.DO_REFINEMENT = true;

% Redundant Dimension Selection - Future Work (do not set to true)
config.spikesort.REDUNDANT_DIMENSION_SELECTION = false;

% Internal parameters - DO NOT MODIFY IF NOT ADVANCED USER
params = struct();
params.CL_MIN_CLUSTER_SPIKES = 50; % Minimum number of spikes in a cluster.
params.CL_MPC_THRESHOLD = 0.75; % MPC threshold in dimension evaluation for whether to consider the dimension.

params.CL_HFCM_EPSILON = 1e-5; % Epsilon value for hfcm.
params.CL_HFCM_NUM_ITER = 50; % Number of iterations for each fcm in hfcm.

params.CL_MIN_REDUNDANT_OVERLAP = 0.9; % Minimum amount of overlap to be considered redundant dimensions.

params.OT_WIDTH_SCALING_FACTOR = 0.75; % Amount to scale ksdensity's bandwdith estimation in overlap_test.
params.OT_MIN_SPIKES_LARGE_CLUSTER = 5000; % Minimum number of spikes to be considered a large cluster in overlap test.
params.OT_EPSILON = 1e-3; % Epsilon value for overlap_test.
params.OT_PEAK_RADIUS = 10; % Number of indices around the peak to consider in overlap_test.
params.OT_HIGH_VALLEY_THRESH = 0.5; % Threshold for large valleys in overlap_test.
params.OT_MIN_CLUSTER_PERCENT = 0.25; % Minimum size for a cluster as a percentage of the size of the data in overlap_test.
params.OT_MIN_CLUSTER_SIZE_UPPER_BOUND = 500; % The largest minimum cluster size in overlap_test.
params.OT_MAX_VALLEY_PERCENT = 0.75; % The maximum valley height percentage of the max peak in overlap_test.
params.OT_MAX_SIG_VALLEY_PERCENT = 0.35; % The maximum significant valley height percentage of the max peak in overlap_test.
params.OT_HEIGHT_THRESH = 0.7; % The percentage of the max peak which the min pk has to exceed and the valley has to maintain in overlap_test.

params.RF_CORE_CLUSTER_PERCENT = 0.3; % Percentage of cluster that should be the core cluster.
params.RF_CORE_UPPER_BOUND_PERCENT = 0.6; % The maximum percentage of cluster that the core cluster can be until core exceeds "until bound" below.
params.RF_CORE_UNTIL_BOUND = 200; % The bound until which to consider the upper bound percent in computing the core cluster.
params.RF_GOOD_RATING = 0.05; % Good LRatio for a cluster (well isolated) in refinement.
params.RF_NUM_STD = 1; % Number of stds from mean of mahalanobis distance distribution to keep when cleaning.
params.RF_NUM_STD_PEAKS = 2.5; % Number of stds from mean of mahalanobis distance distribution to keep when cleaning using only peaks.
params.RF_MAHAL_HIST_BOUND_SCALE = 15; % Scaling factor for mahal histogram bound.
params.RF_NOCLEAN_MAHAL_HIST_BOUND_SCALE = 20; % Scaling factor for mahal histogram bound when not cleaning.
params.RF_MAHAL_BINSIZE_SCALE = 0.25; % Scaling factor for mahal histogram bound to determine bin size.

params.RB_TRUST_SMALL_ISOLATED = false; % Trust small isolated clusters when removing bad ones.

params.TF_NUM_THRESH = 3; % Number of thresholds needed to be considered far away.
params.TF_IR_PERCENT = 0.5; % Percent of input range needed to be considered far away.
params.TF_IR_PERCENT_AFTER_REFINE = 0.6; % Percent of input range needed to be considered far away after refinement.

params.GR_SHORT_ISI_LEN = 1e-3; % Maximum length of a short ISI (in seconds)
params.GR_MAX_SHORT_ISI_PERCENT = 0.05; % Maximum percentage of short ISI before it is considered not a cluster.

params.IC_NUM_STD_REMOVE_CLUSTER = 3; % Number of std's from the mean to remove from the peak space when removing a cluster in iterative_clustering.

params.NS_NUM_STD = 2.5; % Number of std from the median of the mahalanobis distance distribution to consider a nearly simultaneous spike as part of the cluster.

params.FC_MIN_NUM_SPIKES = 25; % Minimum number of spikes for a cluster.

params.FO_MIN_OVERLAP_PERCENT = 0.65; % Minimum percentage of the clusters which overlaps in order to merge clusters in fix_cluster_overlaps.

config.spikesort.params = params;

end
